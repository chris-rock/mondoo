name: Update Release Version

on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version that should be released'
        required: true
        default: '1.2.3'

jobs:
  build-mondoo-payloads:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: make destination dir
        env:
          VERSION: ${{ github.event.inputs.version }}
        run: |
          mkdir dist
      - name: Tar up mondoo.sh
        run: |
          cp mondoo.sh mondoo
          tar czf dist/mondoo_${VERSION}_linux.tar.gz ./mondoo
          rm mondoo
      - name: zip up mondoo.ps1
        run: |
          zip dist/mondoo_${VERSION}_windows.zip mondoo.ps1
      - name: install RPM tools
        run: |
          apt install -y rpm gpg
      - name: build RPM
        run: |
          ./build-rpms.sh ${VERSION} ./dist
      # PUT GPG FILES IN THEIR RIGHT PLACE
      - name: sign RPM
        run: |
          rpmsign --define='%_gpg_name Hello Mondoo' --addsign ./dist/*rpm
      - name: build DEB
        run: |
          ./build-deb.sh ${VERSION} ./dist
      #- name: sign DEB???
      - name: generate checksums
        run: |
          cd dist
          sha256sum *linux* > checksums.linux.txt
          cd -
      - name: Authenticate with GCloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: Setup GCloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: upload files
        run: |
          gsutil cp dist/mondoo_${VERSION}_windows.zip gs://releases-us.mondoo.io/mondoo/${VERSION}/mondoo_${VERSION}_windows.zip
          gsutil cp dist/mondoo_${VERSION}_linux.tar.gz gs://releases-us.mondoo.io/mondoo/${VERSION}/mondoo_${VERSION}_linux.tar.gz
          gsutil cp dist/mondoo_${VERSION}_linux_noarch.rpm gs://releases-us.mondoo.io/mondoo/${VERSTION}/mondoo_${VERSION}_linux_noarch.rpm
          gsutil cp dist/mondoo_${VERSION}_linux_noarch.deb gs://releases-us.mondoo.io/mondoo/${VERSION}/mondoo_${VERSION}_linux_noarch.deb
          gsutil cp dist/checksums.linux.txt gs://releases-us.mondoo.io/mondoo/${VERSION}/checksums.linux.txt
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/mondoo_${VERSION}_windows.zip
            dist/mondoo_${VERSION}_linux.tar.gz
            dist/mondoo_${VERSION}_linux_noarch.rpm
            dist/mondoo_${VERSION}_linux_noarch.deb

  update-downstream:
    needs: 
      - build-mondoo-payloads
    runs-on: ubuntu-latest
    ## Matrix task, repeats steps for each repo
    strategy:
      matrix:
        repo: ["mondoohq/homebrew-mondoo", "mondoohq/archlinux-package", "mondoohq/mac-pkg", "mondoohq/chocolatey", "mondoohq/msi-builder", "mondoohq/repobuilder"]
    steps:
      - uses: actions/checkout@v3
      - name: Repository Dispatch (Workflow Dispatch)
        uses: peter-evans/repository-dispatch@v2
        if: github.event_name == 'workflow_dispatch'
        with:
          token: ${{ secrets.REPO_API_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: update
          client-payload: '{"version": "${{ github.event.inputs.version }}"}'
      - name: Repository Dispatch (Release)
        uses: peter-evans/repository-dispatch@v2
        if: github.event_name == 'release'
        with:
          token: ${{ secrets.REPO_API_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: update
          client-payload: '{"version": "${{ github.event.release.tag_name }}"}'

  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'
          fetch-depth: 0
      - name: Version from Workflow Dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
      - name: Version from Release Tag
        if: github.event_name == 'release'
        run: |
          echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
      - name: Verify valid version
        id: vars
        run: |
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version: $VERSION"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Commit VERSION file
        run: |
          echo ${VERSION} > VERSION
          echo "VERSION is $VERSION"
          git add VERSION
          git config --global user.email "tools@mondoo.com"
          git config --global user.name "Mondoo Tools"
          git commit -m "Update VERSION to $VERSION"
          git push -f
  
